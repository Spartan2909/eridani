[package]
name = "eridani"
version.workspace = true
edition = "2021"
license.workspace = true
description = "Pure functional scripting, anywhere"
repository = "https://github.com/Spartan2909/eridani"
documentation = "https://docs.rs/eridani/latest"

[dependencies]
bimap = { version = "0.6", default-features = false }
generic-array = { version = "0.14.7", features = [
    "serde",
] } # Old version required by sha2/digest/block-buffer
hashbrown = "0.14.3"
serde = { version = "1.0", optional = true, default-features = false, features = [
    "derive",
    "alloc",
] }
sha2 = "0.10.8"
strum = { version = "0.26.1", default-features = false, features = ["derive"] }

[build-dependencies]
rustc_version = "0.4"

[features]
default = ["compiler", "runtime", "std", "target_std"]
compiler = []
runtime = []
web = ["runtime"]
target_web = ["compiler"]
std = []
target_std = ["compiler"]
ffi = []
error_trait = []
serialise = ["dep:serde"]

[lib]
crate-type = ["cdylib", "rlib"]

[workspace]
members = ["eri"]

package.version = "0.1.0"
package.license = "MIT"

[workspace.lints.rust]
unsafe_op_in_unsafe_fn = "forbid"

[workspace.lints.clippy]
nursery = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }

cast_possible_truncation = "allow"
cast_possible_wrap = "allow"
cast_sign_loss = "allow"
multiple_unsafe_ops_per_block = "deny"
option_if_let_else = "allow"
redundant_pub_crate = "allow"
undocumented_unsafe_blocks = "deny"
use_self = "allow"
